
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  email: 'email',
  fullName: 'fullName',
  password: 'password',
  avatar: 'avatar',
  isVerified: 'isVerified',
  role: 'role',
  age: 'age',
  grade: 'grade'
};

exports.Prisma.OTPScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  code: 'code',
  isUsed: 'isUsed',
  userId: 'userId'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  short_description: 'short_description',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  short_description: 'short_description',
  description: 'description',
  category_id: 'category_id',
  thumbnail: 'thumbnail',
  label: 'label',
  status: 'status',
  requirements: 'requirements',
  learning_outcomes: 'learning_outcomes',
  preview_video: 'preview_video',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.ModuleScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  title: 'title',
  short_description: 'short_description',
  order: 'order',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.LessonScalarFieldEnum = {
  id: 'id',
  module_id: 'module_id',
  title: 'title',
  description: 'description',
  type: 'type',
  is_previewable: 'is_previewable',
  status: 'status',
  order: 'order',
  attachment: 'attachment',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.EnrollmentScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  created_at: 'created_at'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  rating: 'rating',
  comment: 'comment',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.QuizQuestionScalarFieldEnum = {
  id: 'id',
  lesson_id: 'lesson_id',
  question: 'question',
  explanation: 'explanation',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.QuizAnswerScalarFieldEnum = {
  id: 'id',
  quiz_question_id: 'quiz_question_id',
  answer: 'answer',
  is_correct: 'is_correct',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.ChallengeScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  description: 'description',
  type: 'type',
  order: 'order',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ChallengeQuestionScalarFieldEnum = {
  id: 'id',
  challenge_id: 'challenge_id',
  question: 'question',
  explanation: 'explanation',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ChallengeAnswerScalarFieldEnum = {
  id: 'id',
  challenge_question_id: 'challenge_question_id',
  answer: 'answer',
  is_correct: 'is_correct',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PuzzleChallengeScalarFieldEnum = {
  id: 'id',
  challenge_id: 'challenge_id',
  instruction: 'instruction',
  image: 'image'
};

exports.Prisma.OrderingChallengeScalarFieldEnum = {
  id: 'id',
  challenge_id: 'challenge_id',
  instruction: 'instruction'
};

exports.Prisma.OrderingItemScalarFieldEnum = {
  id: 'id',
  ordering_id: 'ordering_id',
  content: 'content',
  correct_order: 'correct_order',
  explanation: 'explanation'
};

exports.Prisma.FillBlankChallengeScalarFieldEnum = {
  id: 'id',
  challenge_id: 'challenge_id'
};

exports.Prisma.FillBlankQuestionScalarFieldEnum = {
  id: 'id',
  challenge_id: 'challenge_id',
  sentence: 'sentence',
  correct_word: 'correct_word'
};

exports.Prisma.UserLessonProgressScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  lesson_id: 'lesson_id',
  completed_at: 'completed_at'
};

exports.Prisma.ChallengeScoreScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  challenge_id: 'challenge_id',
  score: 'score',
  submitted_at: 'submitted_at'
};

exports.Prisma.SystemSettingScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserLessonScoreScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  lessonId: 'lessonId',
  score: 'score',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserCourseProgressScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  completed_at: 'completed_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Grade = exports.$Enums.Grade = {
  G1: 'G1',
  G2: 'G2',
  G3: 'G3',
  G4: 'G4',
  G5: 'G5',
  G6: 'G6',
  G7: 'G7',
  G8: 'G8',
  G9: 'G9',
  G10: 'G10',
  G11: 'G11',
  G12: 'G12'
};

exports.CategoryStatus = exports.$Enums.CategoryStatus = {
  draft: 'draft',
  published: 'published',
  archived: 'archived'
};

exports.ProductLabel = exports.$Enums.ProductLabel = {
  new: 'new',
  hot: 'hot',
  featured: 'featured',
  best_seller: 'best_seller'
};

exports.ProductStatus = exports.$Enums.ProductStatus = {
  draft: 'draft',
  published: 'published',
  archived: 'archived'
};

exports.ModuleStatus = exports.$Enums.ModuleStatus = {
  draft: 'draft',
  published: 'published',
  archived: 'archived'
};

exports.LessonType = exports.$Enums.LessonType = {
  video: 'video',
  content: 'content',
  quiz: 'quiz'
};

exports.LessonStatus = exports.$Enums.LessonStatus = {
  draft: 'draft',
  published: 'published',
  archived: 'archived'
};

exports.ChallengeType = exports.$Enums.ChallengeType = {
  quiz: 'quiz',
  puzzle: 'puzzle',
  ordering: 'ordering',
  fillBlank: 'fillBlank'
};

exports.ChallengeStatus = exports.$Enums.ChallengeStatus = {
  draft: 'draft',
  published: 'published',
  archived: 'archived'
};

exports.Prisma.ModelName = {
  User: 'User',
  OTP: 'OTP',
  Category: 'Category',
  Product: 'Product',
  Module: 'Module',
  Lesson: 'Lesson',
  Enrollment: 'Enrollment',
  Review: 'Review',
  QuizQuestion: 'QuizQuestion',
  QuizAnswer: 'QuizAnswer',
  Challenge: 'Challenge',
  ChallengeQuestion: 'ChallengeQuestion',
  ChallengeAnswer: 'ChallengeAnswer',
  PuzzleChallenge: 'PuzzleChallenge',
  OrderingChallenge: 'OrderingChallenge',
  OrderingItem: 'OrderingItem',
  FillBlankChallenge: 'FillBlankChallenge',
  FillBlankQuestion: 'FillBlankQuestion',
  UserLessonProgress: 'UserLessonProgress',
  ChallengeScore: 'ChallengeScore',
  SystemSetting: 'SystemSetting',
  UserLessonScore: 'UserLessonScore',
  UserCourseProgress: 'UserCourseProgress'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
